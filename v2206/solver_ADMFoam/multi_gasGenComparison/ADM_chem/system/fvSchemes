/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2206                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      fvSchemes;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

ddtSchemes
{
    default         Euler;
}

gradSchemes
{
    default         Gauss linear;
}

divSchemes
{
    default             Gauss vanLeer;
    // default             Gauss limitedLinear 1;
    // default             Gauss upwind; // none;
    // default             bounded Gauss limitedLinear 1;

    // div(phi,Yi)         bounded Gauss limitedLinear 1;
    // div(phi,Gi)         bounded Gauss limitedLinear 1;

    // div(phi,U)          Gauss LUST grad(U);
    // div(phi,U)          Gauss upwind;

    div(phi,k)          Gauss upwind;
    div(phi,omega)      Gauss upwind;
    div(phi,epsilon)    Gauss upwind;
    div(phi,T)          Gauss linearUpwind grad(T);

    // div((nuEff*dev2(T(grad(U))))) Gauss linear;

    // testing
    // div(rhoPhi,U)       Gauss upwind;
    div(rhoPhi,U)       Gauss linearUpwind grad(U);
    div(phi,alpha)      Gauss vanLeer;
    div(phirb,alpha)    Gauss linear;

    div(phi,alpha.liquid)    Gauss vanLeer;
    div(phirb,alpha.liquid)  Gauss linear;

    "div\(alphaRhoPhi.*,U.*\)"      Gauss limitedLinearV 1;
    "div\(phi.*,U.*\)"              Gauss limitedLinearV 1;

    "div\(alphaRhoPhi.*,Yi\)"       Gauss limitedLinear 1;
    "div\(alphaRhoPhi.*,(h|e).*\)"  Gauss limitedLinear 1;
    "div\(alphaRhoPhi.*,K.*\)"      Gauss limitedLinear 1;
    "div\(alphaPhi.*,p\)"           Gauss limitedLinear 1;

    div((interpolate(cp)*rhoPhi),T)     Gauss upwind;
    div((muEff*dev(T(grad(U)))))        Gauss linear;
    div(((rho*nuEff)*dev2(T(grad(U))))) Gauss linear;

}

laplacianSchemes
{
    // default         Gauss linear corrected;
    default         Gauss linear orthogonal;
}

interpolationSchemes
{
    default         linear;
}

snGradSchemes
{
    // default         corrected;
    default         orthogonal;
}


// ************************************************************************* //

