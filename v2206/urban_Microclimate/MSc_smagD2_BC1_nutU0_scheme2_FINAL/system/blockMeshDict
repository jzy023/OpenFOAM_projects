/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v1912                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

scale 1;

vertices
(
    (0      0      0) // v0
    (0      100    0) // v1 
    (0      1000   0) // v2
    (6282   1000   0) // v3
    (6282   100    0) // v4
    (6282   0      0) // v5

    (0      0      3141) // v6
    (0      100    3141) // v7
    (0      1000   3141) // v8
    (6282   1000   3141) // v9
    (6282   100    3141) // v10
    (6282   0      3141) // v11
);

blocks
(
    hex (0 1 7 6 5 4 10 11) // lower part
    (7 64 64) // y z x
    edgeGrading (1 1 1 1 1 1 1 1 1 1 1 1)

    hex (1 2 8 7 4 3 9 10) // upper part
    (57 64 64)
    edgeGrading (1 1 1 1 1 1 1 1 1 1 1 1)
);

edges
(
);

boundary
(
    inlet0
    {
        type cyclic;
        neighbourPatch outlet0;
        faces
        (
            (0 1 7 6)
        );
    }
    inlet1
    {
        type cyclic;
        neighbourPatch outlet1;
        faces
        (
            (1 2 8 7)
        );
    }
    outlet0
    {
        type cyclic;
        neighbourPatch inlet0;
        faces
        (
            (5 4 10 11)
        );
    }
    outlet1
    {
        type cyclic;
        neighbourPatch inlet1;
        faces
        (
            (4 3 9 10)
        );
    }
    upperAtm
    {
        type patch;
        faces
        (
            (2 8 9 3)
        );
    }
    ground
    {
        type wall;
        faces
        (
            (0 5 11 6)
        );
    }
    frontAtm0
    {
        type cyclic;
        neighbourPatch backAtm0;
        faces
        (
            (6 7 10 11)
        );
    }
    frontAtm1
    {
        type cyclic;
        neighbourPatch backAtm1;
        faces
        (
            (7 8 9 10)
        );
    }
    backAtm0
    {
        type cyclic;
        neighbourPatch frontAtm0;
        faces
        (
            (0 1 4 5)
        );
    }
    backAtm1
    {
        type cyclic;
        neighbourPatch frontAtm1;
        faces
        (
            (1 2 3 4)
        );
    }
);

// ************************************************************************* //
