/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  6
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      snappyHexMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

castellatedMesh true;
snap            true;
addLayers       true;

geometry
{
    airfoil
    {
        type    triSurfaceMesh;
        file    "airfoil.obj";
    }

    refinementBox
    {
        type    searchableBox;
        min     ( -0.20  0.06 -0.1  );
        max     (  1.30  0.06  0.1  );
    }

    refinementLE
    {
	type	searchableCylinder;
	point1	(  0.03  0.00 -0.1  );
	point2	(  0.03  0.00  0.1  );
	radius 	0.06;
    }

    refinementTE
    {
	type	searchableCylinder;
	point1	(  0.937  -0.251 -0.1  );
	point2	(  0.937  -0.251  0.1  );
	radius 	0.06;
    }
};

castellatedMeshControls
{
    maxLocalCells 100000;
    maxGlobalCells 4000000;
    minRefinementCells 100;
    nCellsBetweenLevels 4;
    resolveFeatureAngle 15;

    features ({ file "airfoil.eMesh"; level 3; });

    refinementSurfaces
    {
        airfoil
        {
            level (6 6);
	    patchInfo { type wall; }
        }
    }
    refinementRegions
    {
        //airfoil
        //{
	//    mode distance;
        //    levels ((0.06 5));
        //}
        refinementBox
        {
            mode inside;
            levels ((1E15 4));
        }
    	refinementLE
    	{
            mode inside;
            levels ((1E15 6));
    	}
    	refinementTE
    	{
            mode inside;
            levels ((1E15 6));
    	}
    }
    locationInMesh (-0.5 0 0);
    // Whether any faceZones (as specified in the refinementSurfaces)
    // are only on the boundary of corresponding cellZones or also allow
    // free-standing zone faces. Not used if there are no faceZones.
    allowFreeStandingZoneFaces true;
}

snapControls
{
    nSmoothPatch	5;
    tolerance		1;
    nSolveIter		40;
    nRelaxIter		10;
    nFeatureSnapIter	10;
    explicitFeatureSnap    true;
    implicitFeatureSnap    false;
}

addLayersControls
{
    layers
    {
        airfoil	{  nSurfaceLayers 6; } //12;  }
    }

    relativeSizes	false;
    expansionRatio	1.1;
    //thickness		0.004;
    //finalLayerThickness	0.7;
    firstLayerThickness	0.0007;
    minThickness	2e-5;
    nGrow 0;

    // Advanced settings

    featureAngle 180;

    nRelaxIter 5;
    nSmoothSurfaceNormals 1;
    nSmoothNormals 3;
    nSmoothThickness 10;
    maxFaceThicknessRatio 0.5;
    maxThicknessToMedialRatio 0.3;
    minMedianAxisAngle 90;
    nBufferCellsNoExtrude 0;

    nLayerIter 50;
}

meshQualityControls
{
    //- Maximum non-orthogonality allowed. Set to 180 to disable.
    maxNonOrtho 65;

    //- Max skewness allowed. Set to <0 to disable.
    maxBoundarySkewness 4;
    maxInternalSkewness 4;

    //- Max concaveness allowed. Is angle (in degrees) below which concavity
    //  is allowed. 0 is straight face, <0 would be convex face.
    //  Set to 180 to disable.
    maxConcave 80;

    //- Minimum pyramid volume. Is absolute volume of cell pyramid.
    //  Set to a sensible fraction of the smallest cell volume expected.
    //  Set to very negative number (e.g. -1E30) to disable.
    minVol 1e-13;

    //- Minimum quality of the tet formed by the face-centre
    //  and variable base point minimum decomposition triangles and
    //  the cell centre.  Set to very negative number (e.g. -1E30) to
    //  disable.
    //     <0 = inside out tet,
    //      0 = flat tetparaF
    //      1 = regular tet
    minTetQuality 1e-30;

    //- Minimum face area. Set to <0 to disable.
    minArea -1;

    //- Minimum face twist. Set to <-1 to disable. dot product of face normal
    //  and face centre triangles normal
    minTwist 0.05;

    //- Minimum normalised cell determinant
    //  1 = hex, <= 0 = folded or flattened illegal cell
    minDeterminant 0.001;

    //- minFaceWeight (0 -> 0.5)
    minFaceWeight 0.05;

    //- minVolRatio (0 -> 1)
    minVolRatio 0.01;

    // must be >0 for Fluent compatibility
    minTriangleTwist -1;


    // Advanced

    //- Number of error distribution iterations
    nSmoothScale 4;
    //- Amount to scale back displacement at error points
    errorReduction 0.75;
}

// Advanced
writeFlags
(
    noRefinement
);
mergeTolerance 1e-6;


// ************************************************************************* //
